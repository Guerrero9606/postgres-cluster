version: '3.9'

services:

  monitor:
    #image: citusdata/pg_auto_failover  # Imagen oficial para el monitor
    build:
      context: ./pg_monitor
      dockerfile: Dockerfile
    container_name: pg_auto_failover-monitor
      # user: postgres
    environment:
      POSTGRES_USER: cluster
      POSTGRES_PASSWORD: Admin123
      POSTGRES_DB: pg_auto_failover
    volumes:
      - pgdata_monitor:/var/lib/postgresql/data
      - ./config/monitor/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./config/monitor/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_monitor/scripts/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      pg_network:
        ipv4_address: 172.18.0.4
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cluster -d test_cluster"]
      interval: 30s
      timeout: 10s
      retries: 5
    entrypoint: ["/docker-entrypoint-initdb.d/init.sh"]
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf

  master:
    build:
      context: ./master
      dockerfile: Dockerfile  # Se asume que el Dockerfile para el master está en ./master/Dockerfile
    container_name: postgres-cluster-master
    user: postgres
    environment:
      POSTGRES_USER: cluster
      POSTGRES_PASSWORD: Admin123
      POSTGRES_DB: test_cluster
      PG_DATA: /var/lib/postgresql/data/node1
    volumes:
      - pgdata_master:/var/lib/postgresql/data
        #- ./config/master/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./config/master/pg_hba.conf:/etc/postgresql/pg_hba.conf
        #- ./master/scripts/init-replicator-role.sh:/docker-entrypoint-initdb.d/init-replicator-role.sh
    networks:
      pg_network:
        ipv4_address: 172.18.0.2
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cluster -d test_cluster"]
      interval: 30s
      timeout: 10s
      retries: 5
        #entrypoint: ["/docker-entrypoint-initdb.d/init-replicator-role.sh"]
    command: ["pg_autoctl", "create", "postgres", "--pgdata", "/var/lib/postgresql/data/node1", "--monitor", "postgres://autoctl_node@172.18.0.4:5432/pg_auto_failover", "--name", "master", "--auth", "trust", "--ssl-self-signed", "--run", "--candidate-priority", "1"]

  replica:
    build:
      context: ./replica
      dockerfile: Dockerfile  # Se asume que el Dockerfile para la réplica está en ./replica/Dockerfile
    container_name: postgres-cluster-replica
    user: postgres
    environment:
      POSTGRES_USER: cluster
      POSTGRES_PASSWORD: Admin123
      POSTGRES_DB: test_cluster
      PG_DATA: /var/lib/postgresql/node2
      POSTGRES_REPLICATION_ROLE: "replica"
      POSTGRES_REPLICATION_USER: "replicator"
      POSTGRES_REPLICATION_PASSWORD: "replicatorpassword"
    volumes:
      - pgdata_replica:/var/lib/postgresql/data
        #- ./config/replica/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./config/replica/pg_hba.conf:/etc/postgresql/pg_hba.conf
        #- ./replica/scripts/replica-entrypoint.sh:/docker-entrypoint-initdb.d/replica-entrypoint.sh
    networks:
      pg_network:
        ipv4_address: 172.18.0.3
    depends_on:
      - master
      - monitor
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cluster -d test_cluster"]
      interval: 30s
      timeout: 10s
      retries: 5
        #entrypoint: ["/docker-entrypoint-initdb.d/replica-entrypoint.sh"]
    command: ["pg_autoctl", "create", "postgres", "--pgdata", "/var/lib/postgresql/data/node2", "--monitor", "postgres://autoctl_node@172.18.0.4:5432/pg_auto_failover", "--name", "replica", "--auth", "trust", "--ssl-self-signed", "--run"]

volumes:
  pgdata_master:
  pgdata_replica:
  pgdata_monitor:

networks:
  pg_network:
    external: true
